/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IDAO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDAO__factory>;
    getContractFactory(
      name: "PermissionLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionLib__factory>;
    getContractFactory(
      name: "DaoAuthorizableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DaoAuthorizableUpgradeable__factory>;
    getContractFactory(
      name: "IPlugin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPlugin__factory>;
    getContractFactory(
      name: "PluginUUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PluginUUPSUpgradeable__factory>;
    getContractFactory(
      name: "IPluginSetup",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPluginSetup__factory>;
    getContractFactory(
      name: "PluginSetup",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PluginSetup__factory>;
    getContractFactory(
      name: "IERC1822ProxiableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822ProxiableUpgradeable__factory>;
    getContractFactory(
      name: "IBeaconUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeaconUpgradeable__factory>;
    getContractFactory(
      name: "ERC1967UpgradeUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967UpgradeUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "IERC1967",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1967__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Proxy__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IMembershipPlugin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMembershipPlugin__factory>;
    getContractFactory(
      name: "IPluginRepository",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPluginRepository__factory>;
    getContractFactory(
      name: "MembershipPlugin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MembershipPlugin__factory>;
    getContractFactory(
      name: "MembershipPluginSetup",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MembershipPluginSetup__factory>;

    getContractAt(
      name: "IDAO",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDAO>;
    getContractAt(
      name: "PermissionLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionLib>;
    getContractAt(
      name: "DaoAuthorizableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DaoAuthorizableUpgradeable>;
    getContractAt(
      name: "IPlugin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPlugin>;
    getContractAt(
      name: "PluginUUPSUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PluginUUPSUpgradeable>;
    getContractAt(
      name: "IPluginSetup",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPluginSetup>;
    getContractAt(
      name: "PluginSetup",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PluginSetup>;
    getContractAt(
      name: "IERC1822ProxiableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822ProxiableUpgradeable>;
    getContractAt(
      name: "IBeaconUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeaconUpgradeable>;
    getContractAt(
      name: "ERC1967UpgradeUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967UpgradeUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "IERC1967",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1967>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "ERC1967Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Proxy>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IMembershipPlugin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMembershipPlugin>;
    getContractAt(
      name: "IPluginRepository",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPluginRepository>;
    getContractAt(
      name: "MembershipPlugin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MembershipPlugin>;
    getContractAt(
      name: "MembershipPluginSetup",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MembershipPluginSetup>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
